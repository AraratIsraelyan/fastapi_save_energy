from fastapi import FastAPI, Form
from fastapi.responses import FileResponse
from starlette.staticfiles import StaticFiles
from starlette.templating import Jinja2Templates

list_city = ['Абаза', 'Абакан', 'Абдулино', 'Абинск', 'Агидель', 'Агрыз', 'Адыгейск', 'Азнакаево', 'Азов', 'Ак-Довурак',
          'Аксай', 'Алагир', 'Алапаевск', 'Алатырь', 'Алдан', 'Алейск', 'Александров', 'Александровск-Сахалинский',
          'Александровск', 'Алексеевка', 'Алексин', 'Алзамай', 'Алупка', 'Алушта', 'Альметьевск', 'Амурск', 'Анадырь',
          'Анапа', 'Ангарск', 'Андреаполь', 'Анжеро-Судженск', 'Анива', 'Апатиты', 'Апрелевка', 'Апшеронск', 'Арамиль',
          'Аргун', 'Ардатов', 'Ардон', 'Арзамас', 'Аркадак', 'Армавир', 'Армянск', 'Арсеньев', 'Арск', 'Артём',
          'Артёмовск', 'Артёмовский', 'Архангельск', 'Асбест', 'Асино', 'Астрахань', 'Аткарск', 'Ахтубинск', 'Ачинск',
          'Ачхой-Мартан', 'Аша', 'Бабаево', 'Бабушкин', 'Бавлы', 'Багратионовск', 'Байкальск', 'Баймак', 'Бакал',
          'Баксан', 'Балабаново', 'Балаклава', 'Балаково', 'Балахна', 'Балашиха', 'Балашов', 'Балей', 'Балтийск',
          'Барабинск', 'Барнаул', 'Барыш', 'Батайск', 'Бахчисарай', 'Бежецк', 'Белая Калитва', 'Белая Холуница',
          'Белгород', 'Белебей', 'Белинский', 'Белово', 'Белогорск', 'Белогорск', 'Белозерск', 'Белокуриха',
          'Беломорск', 'Белоозёрский', 'Белорецк', 'Белореченск', 'Белоусово', 'Белоярский', 'Белый', 'Белёв', 'Бердск',
          'Березники', 'Берёзовский', 'Берёзовский', 'Беслан', 'Бийск', 'Бикин', 'Билибино', 'Биробиджан', 'Бирск',
          'Бирюсинск', 'Бирюч', 'Благовещенск', 'Благовещенск', 'Благодарный', 'Бобров', 'Богданович', 'Богородицк',
          'Богородск', 'Боготол', 'Богучар', 'Бодайбо', 'Бокситогорск', 'Болгар', 'Бологое', 'Болотное', 'Болохово',
          'Болхов', 'Большой Камень', 'Бор', 'Борзя', 'Борисоглебск', 'Боровичи', 'Боровск', 'Бородино', 'Братск',
          'Бронницы', 'Брянск', 'Бугульма', 'Бугуруслан', 'Будённовск', 'Бузулук', 'Буинск', 'Буй', 'Буйнакск',
          'Бутурлиновка', 'Валдай', 'Валуйки', 'Велиж', 'Великие Луки', 'Великий Новгород', 'Великий Устюг', 'Вельск',
          'Венёв', 'Верещагино', 'Верея', 'Верхнеуральск', 'Верхний Тагил', 'Верхний Уфалей', 'Верхняя Пышма',
          'Верхняя Салда', 'Верхняя Тура', 'Верхотурье', 'Верхоянск', 'Весьегонск', 'Ветлуга', 'Видное', 'Вилюйск',
          'Вилючинск', 'Вихоревка', 'Вичуга', 'Владивосток', 'Владикавказ', 'Владимир', 'Волгоград', 'Волгодонск',
          'Волгореченск', 'Волжск', 'Волжский', 'Вологда', 'Володарск', 'Волоколамск', 'Волосово', 'Волхов', 'Волчанск',
          'Вольск', 'Воркута', 'Воронеж', 'Ворсма', 'Воскресенск', 'Воткинск', 'Всеволожск', 'Вуктыл', 'Выборг',
          'Выкса', 'Высоковск', 'Высоцк', 'Вытегра', 'Вышний Волочёк', 'Вяземский', 'Вязники', 'Вязьма',
          'Вятские Поляны', 'Гаврилов Посад', 'Гаврилов-Ям', 'Гагарин', 'Гаджиево', 'Гай', 'Галич', 'Гатчина',
          'Гвардейск', 'Гдов', 'Геленджик', 'Георгиевск', 'Глазов', 'Голицыно', 'Горбатов', 'Горно-Алтайск',
          'Горнозаводск', 'Горняк', 'Городец', 'Городище', 'Городовиковск', 'Гороховец', 'Горячий Ключ', 'Грайворон',
          'Гремячинск', 'Грозный', 'Грязи', 'Грязовец', 'Губаха', 'Губкин', 'Губкинский', 'Гудермес', 'Гуково',
          'Гулькевичи', 'Гурьевск', 'Гурьевск', 'Гусев', 'Гусиноозёрск', 'Гусь-Хрустальный', 'Давлеканово',
          'Дагестанские Огни', 'Далматово', 'Дальнегорск', 'Дальнереченск', 'Данилов', 'Данков', 'Дегтярск', 'Дедовск',
          'Демидов', 'Дербент', 'Десногорск', 'Джанкой', 'Дзержинск', 'Дзержинский', 'Дивногорск', 'Дигора',
          'Димитровград', 'Дмитриев', 'Дмитров', 'Дмитровск', 'Дно', 'Добрянка', 'Долгопрудный', 'Долинск',
          'Домодедово', 'Донецк', 'Донской', 'Дорогобуж', 'Дрезна', 'Дубна', 'Дубовка', 'Дудинка', 'Духовщина',
          'Дюртюли', 'Дятьково', 'Евпатория', 'Егорьевск', 'Ейск', 'Екатеринбург', 'Елабуга', 'Елец', 'Елизово',
          'Ельня', 'Еманжелинск', 'Емва', 'Енисейск', 'Ермолино', 'Ершов', 'Ессентуки', 'Ефремов', 'Железноводск',
          'Железногорск-Илимский', 'Железногорск', 'Железногорск', 'Жердевка', 'Жигулёвск', 'Жиздра', 'Жирновск',
          'Жуков', 'Жуковка', 'Жуковский', 'Завитинск', 'Заводоуковск', 'Заволжск', 'Заволжье', 'Задонск', 'Заинск',
          'Закаменск', 'Заозёрный', 'Заозёрск', 'Западная Двина', 'Заполярный', 'Зарайск', 'Заречный', 'Заречный',
          'Заринск', 'Звенигово', 'Звенигород', 'Зверево', 'Зеленогорск', 'Зеленогорск', 'Зеленоград', 'Зеленоградск',
          'Зеленодольск', 'Зеленокумск', 'Зерноград', 'Зея', 'Зима', 'Златоуст', 'Злынка', 'Змеиногорск', 'Знаменск',
          'Зубцов', 'Зуевка', 'Ивангород', 'Иваново', 'Ивантеевка', 'Ивдель', 'Игарка', 'Ижевск', 'Избербаш',
          'Изобильный', 'Иланский', 'Инза', 'Инкерман', 'Иннополис', 'Инсар', 'Инта', 'Ипатово', 'Ирбит', 'Иркутск',
          'Исилькуль', 'Искитим', 'Истра', 'Ишим', 'Ишимбай', 'Йошкар-Ола', 'Кадников', 'Казань', 'Калач-на-Дону',
          'Калач', 'Калачинск', 'Калининград', 'Калининск', 'Калтан', 'Калуга', 'Калязин', 'Камбарка', 'Каменка',
          'Каменногорск', 'Каменск-Уральский', 'Каменск-Шахтинский', 'Камень-на-Оби', 'Камешково', 'Камызяк', 'Камышин',
          'Камышлов', 'Канаш', 'Кандалакша', 'Канск', 'Карабаново', 'Карабаш', 'Карабулак', 'Карасук', 'Карачаевск',
          'Карачев', 'Каргат', 'Каргополь', 'Карпинск', 'Карталы', 'Касимов', 'Касли', 'Каспийск', 'Катав-Ивановск',
          'Катайск', 'Качканар', 'Кашин', 'Кашира', 'Кедровый', 'Кемерово', 'Кемь', 'Керчь', 'Кизел', 'Кизилюрт',
          'Кизляр', 'Кимовск', 'Кимры', 'Кингисепп', 'Кинель', 'Кинешма', 'Киреевск', 'Киренск', 'Киржач', 'Кириллов',
          'Кириши', 'Киров', 'Киров', 'Кировград', 'Кирово-Чепецк', 'Кировск', 'Кировск', 'Кирс', 'Кирсанов',
          'Киселёвск', 'Кисловодск', 'Клин', 'Клинцы', 'Княгинино', 'Ковдор', 'Ковров', 'Ковылкино', 'Когалым',
          'Кодинск', 'Козельск', 'Козловка', 'Козьмодемьянск', 'Кола', 'Кологрив', 'Коломна', 'Колпашево', 'Колпино',
          'Колтуши', 'Кольчугино', 'Коммунар', 'Комсомольск-на-Амуре', 'Комсомольск', 'Конаково', 'Кондопога',
          'Кондрово', 'Константиновск', 'Копейск', 'Кораблино', 'Кореновск', 'Коркино', 'Королёв', 'Короча', 'Корсаков',
          'Коряжма', 'Костерёво', 'Костомукша', 'Кострома', 'Котельники', 'Котельниково', 'Котельнич', 'Котлас',
          'Котово', 'Котовск', 'Кохма', 'Красавино', 'Красноармейск', 'Красноармейск', 'Красновишерск', 'Красногорск',
          'Краснодар', 'Красное Село', 'Краснозаводск', 'Краснознаменск', 'Краснознаменск', 'Краснокаменск',
          'Краснокамск', 'Красноперекопск', 'Краснослободск', 'Краснослободск', 'Краснотурьинск', 'Красноуральск',
          'Красноуфимск', 'Красноярск', 'Красный Кут', 'Красный Сулин', 'Красный Холм', 'Кремёнки', 'Кронштадт',
          'Кропоткин', 'Крымск', 'Кстово', 'Кубинка', 'Кувандык', 'Кувшиново', 'Кудрово', 'Кудымкар', 'Кузнецк',
          'Куйбышев', 'Кукмор', 'Кулебаки', 'Кумертау', 'Кунгур', 'Купино', 'Курган', 'Курганинск', 'Курильск',
          'Курлово', 'Куровское', 'Курск', 'Куртамыш', 'Курчалой', 'Курчатов', 'Куса', 'Кушва', 'Кызыл', 'Кыштым',
          'Кяхта', 'Лабинск', 'Лабытнанги', 'Лагань', 'Ладушкин', 'Лаишево', 'Лакинск', 'Лангепас', 'Лахденпохья',
          'Лебедянь', 'Лениногорск', 'Ленинск-Кузнецкий', 'Ленинск', 'Ленск', 'Лермонтов', 'Лесной', 'Лесозаводск',
          'Лесосибирск', 'Ливны', 'Ликино-Дулёво', 'Липецк', 'Липки', 'Лиски', 'Лихославль', 'Лобня', 'Лодейное Поле',
          'Ломоносов', 'Лосино-Петровский', 'Луга', 'Луза', 'Лукоянов', 'Луховицы', 'Лысково', 'Лысьва', 'Лыткарино',
          'Льгов', 'Любань', 'Люберцы', 'Любим', 'Людиново', 'Лянтор', 'Магадан', 'Магас', 'Магнитогорск', 'Майкоп',
          'Майский', 'Макаров', 'Макарьев', 'Макушино', 'Малая Вишера', 'Малгобек', 'Малмыж', 'Малоархангельск',
          'Малоярославец', 'Мамадыш', 'Мамоново', 'Мантурово', 'Мариинск', 'Мариинский Посад', 'Маркс', 'Махачкала',
          'Мглин', 'Мегион', 'Медвежьегорск', 'Медногорск', 'Медынь', 'Межгорье', 'Междуреченск', 'Мезень', 'Меленки',
          'Мелеуз', 'Менделеевск', 'Мензелинск', 'Мещовск', 'Миасс', 'Микунь', 'Миллерово', 'Минеральные Воды',
          'Минусинск', 'Миньяр', 'Мирный', 'Мирный', 'Михайлов', 'Михайловка', 'Михайловск', 'Михайловск', 'Мичуринск',
          'Могоча', 'Можайск', 'Можга', 'Моздок', 'Мончегорск', 'Морозовск', 'Моршанск', 'Мосальск', 'Москва',
          'Московский', 'Муравленко', 'Мураши', 'Мурино', 'Мурманск', 'Муром', 'Мценск', 'Мыски', 'Мытищи', 'Мышкин',
          'Набережные Челны', 'Навашино', 'Наволоки', 'Надым', 'Назарово', 'Назрань', 'Называевск', 'Нальчик',
          'Нариманов', 'Наро-Фоминск', 'Нарткала', 'Нарьян-Мар', 'Находка', 'Невель', 'Невельск', 'Невинномысск',
          'Невьянск', 'Нелидово', 'Неман', 'Нерехта', 'Нерчинск', 'Нерюнгри', 'Нестеров', 'Нефтегорск', 'Нефтекамск',
          'Нефтекумск', 'Нефтеюганск', 'Нея', 'Нижневартовск', 'Нижнекамск', 'Нижнеудинск', 'Нижние Серги',
          'Нижний Ломов', 'Нижний Новгород', 'Нижний Тагил', 'Нижняя Салда', 'Нижняя Тура', 'Николаевск-на-Амуре',
          'Николаевск', 'Никольск', 'Никольск', 'Никольское', 'Новая Ладога', 'Новая Ляля', 'Новоалександровск',
          'Новоалтайск', 'Новоаннинский', 'Нововоронеж', 'Новодвинск', 'Новозыбков', 'Новокубанск', 'Новокузнецк',
          'Новокуйбышевск', 'Новомичуринск', 'Новомосковск', 'Новопавловск', 'Новоржев', 'Новороссийск', 'Новосибирск',
          'Новосиль', 'Новосокольники', 'Новотроицк', 'Новоузенск', 'Новоульяновск', 'Новоуральск', 'Новохопёрск',
          'Новочебоксарск', 'Новочеркасск', 'Новошахтинск', 'Новый Оскол', 'Новый Уренгой', 'Ногинск', 'Нолинск',
          'Норильск', 'Ноябрьск', 'Нурлат', 'Нытва', 'Нюрба', 'Нягань', 'Нязепетровск', 'Няндома', 'Облучье', 'Обнинск',
          'Обоянь', 'Обь', 'Одинцово', 'Озёрск', 'Озёрск', 'Озёры', 'Октябрьск', 'Октябрьский', 'Окуловка',
          'Оленегорск', 'Олонец', 'Олёкминск', 'Омск', 'Омутнинск', 'Онега', 'Опочка', 'Оренбург', 'Орехово-Зуево',
          'Орлов', 'Орск', 'Орёл', 'Оса', 'Осинники', 'Осташков', 'Остров', 'Островной', 'Острогожск', 'Отрадное',
          'Отрадный', 'Оха', 'Оханск', 'Очёр', 'Павлово', 'Павловск', 'Павловск', 'Павловский Посад', 'Палласовка',
          'Партизанск', 'Певек', 'Пенза', 'Первомайск', 'Первоуральск', 'Перевоз', 'Пересвет', 'Переславль-Залесский',
          'Пермь', 'Пестово', 'Петергоф', 'Петров Вал', 'Петровск-Забайкальский', 'Петровск', 'Петрозаводск',
          'Петропавловск-Камчатский', 'Петухово', 'Петушки', 'Печора', 'Печоры', 'Пикалёво', 'Пионерский', 'Питкяранта',
          'Плавск', 'Пласт', 'Плёс', 'Поворино', 'Подольск', 'Подпорожье', 'Покачи', 'Покров', 'Покровск', 'Полевской',
          'Полесск', 'Полысаево', 'Полярные Зори', 'Полярный', 'Поронайск', 'Порхов', 'Похвистнево', 'Почеп', 'Починок',
          'Пошехонье', 'Правдинск', 'Приволжск', 'Приморск', 'Приморск', 'Приморско-Ахтарск', 'Приозерск',
          'Прокопьевск', 'Пролетарск', 'Протвино', 'Прохладный', 'Псков', 'Пугачёв', 'Пудож', 'Пустошка', 'Пучеж',
          'Пушкин', 'Пушкино', 'Пущино', 'Пыталово', 'Пыть-Ях', 'Пятигорск', 'Радужный', 'Радужный', 'Райчихинск',
          'Раменское', 'Рассказово', 'Ревда', 'Реж', 'Реутов', 'Ржев', 'Родники', 'Рославль', 'Россошь',
          'Ростов-на-Дону', 'Ростов', 'Рошаль', 'Ртищево', 'Рубцовск', 'Рудня', 'Руза', 'Рузаевка', 'Рыбинск', 'Рыбное',
          'Рыльск', 'Ряжск', 'Рязань', 'Саки', 'Салават', 'Салаир', 'Салехард', 'Сальск', 'Самара', 'Санкт-Петербург',
          'Саранск', 'Сарапул', 'Саратов', 'Саров', 'Сасово', 'Сатка', 'Сафоново', 'Саяногорск', 'Саянск',
          'Светлогорск', 'Светлоград', 'Светлый', 'Светогорск', 'Свирск', 'Свободный', 'Себеж', 'Севастополь',
          'Северо-Курильск', 'Северобайкальск', 'Северодвинск', 'Североморск', 'Североуральск', 'Северск', 'Севск',
          'Сегежа', 'Сельцо', 'Семикаракорск', 'Семилуки', 'Семёнов', 'Сенгилей', 'Серафимович', 'Сергач',
          'Сергиев Посад', 'Сердобск', 'Серов', 'Серпухов', 'Сертолово', 'Сестрорецк', 'Сибай', 'Сим', 'Симферополь',
          'Сковородино', 'Скопин', 'Славгород', 'Славск', 'Славянск-на-Кубани', 'Сланцы', 'Слободской', 'Слюдянка',
          'Смоленск', 'Снежинск', 'Снежногорск', 'Собинка', 'Советск', 'Советск', 'Советск', 'Советская Гавань',
          'Советский', 'Сокол', 'Солигалич', 'Соликамск', 'Солнечногорск', 'Соль-Илецк', 'Сольвычегодск', 'Сольцы',
          'Сорочинск', 'Сорск', 'Сортавала', 'Сосенский', 'Сосновка', 'Сосновоборск', 'Сосновый Бор', 'Сосногорск',
          'Сочи', 'Спас-Деменск', 'Спас-Клепики', 'Спасск-Дальний', 'Спасск-Рязанский', 'Спасск', 'Среднеколымск',
          'Среднеуральск', 'Сретенск', 'Ставрополь', 'Старая Купавна', 'Старая Русса', 'Старица', 'Стародуб',
          'Старый Крым', 'Старый Оскол', 'Стерлитамак', 'Стрежевой', 'Строитель', 'Струнино', 'Ступино', 'Суворов',
          'Судак', 'Суджа', 'Судогда', 'Суздаль', 'Сунжа', 'Суоярви', 'Сураж', 'Сургут', 'Суровикино', 'Сурск',
          'Сусуман', 'Сухиничи', 'Сухой Лог', 'Сызрань', 'Сыктывкар', 'Сысерть', 'Сычёвка', 'Сясьстрой', 'Тавда',
          'Таганрог', 'Тайга', 'Тайшет', 'Талдом', 'Талица', 'Тамбов', 'Тара', 'Тарко-Сале', 'Таруса', 'Татарск',
          'Таштагол', 'Тверь', 'Теберда', 'Тейково', 'Темников', 'Темрюк', 'Терек', 'Тетюши', 'Тимашёвск', 'Тихвин',
          'Тихорецк', 'Тобольск', 'Тогучин', 'Тольятти', 'Томари', 'Томмот', 'Томск', 'Топки', 'Торжок', 'Торопец',
          'Тосно', 'Тотьма', 'Троицк', 'Троицк', 'Трубчевск', 'Трёхгорный', 'Туапсе', 'Туймазы', 'Тула', 'Тулун',
          'Туран', 'Туринск', 'Тутаев', 'Тында', 'Тырныауз', 'Тюкалинск', 'Тюмень', 'Уварово', 'Углегорск', 'Углич',
          'Удачный', 'Удомля', 'Ужур', 'Узловая', 'Улан-Удэ', 'Ульяновск', 'Унеча', 'Урай', 'Урень', 'Уржум',
          'Урус-Мартан', 'Урюпинск', 'Усинск', 'Усмань', 'Усолье-Сибирское', 'Усолье', 'Уссурийск', 'Усть-Джегута',
          'Усть-Илимск', 'Усть-Катав', 'Усть-Кут', 'Усть-Лабинск', 'Устюжна', 'Уфа', 'Ухта', 'Учалы', 'Уяр', 'Фатеж',
          'Феодосия', 'Фокино', 'Фокино', 'Фролово', 'Фрязино', 'Фурманов', 'Хабаровск', 'Хадыженск', 'Ханты-Мансийск',
          'Харабали', 'Харовск', 'Хасавюрт', 'Хвалынск', 'Хилок', 'Химки', 'Холм', 'Холмск', 'Хотьково', 'Цивильск',
          'Цимлянск', 'Циолковский', 'Чадан', 'Чайковский', 'Чапаевск', 'Чаплыгин', 'Чебаркуль', 'Чебоксары', 'Чегем',
          'Чекалин', 'Челябинск', 'Чердынь', 'Черемхово', 'Черепаново', 'Череповец', 'Черкесск', 'Черноголовка',
          'Черногорск', 'Чернушка', 'Черняховск', 'Чехов', 'Чистополь', 'Чита', 'Чкаловск', 'Чудово', 'Чулым',
          'Чусовой', 'Чухлома', 'Чёрмоз', 'Шагонар', 'Шадринск', 'Шали', 'Шарыпово', 'Шарья', 'Шатура', 'Шахты',
          'Шахунья', 'Шацк', 'Шебекино', 'Шелехов', 'Шенкурск', 'Шилка', 'Шимановск', 'Шиханы', 'Шлиссельбург',
          'Шумерля', 'Шумиха', 'Шуя', 'Щербинка', 'Щигры', 'Щучье', 'Щёкино', 'Щёлкино', 'Щёлково', 'Электрогорск',
          'Электросталь', 'Электроугли', 'Элиста', 'Энгельс', 'Эртиль', 'Югорск', 'Южа', 'Южно-Сахалинск',
          'Южно-Сухокумск', 'Южноуральск', 'Юрга', 'Юрьев-Польский', 'Юрьевец', 'Юрюзань', 'Юхнов', 'Ядрин', 'Якутск',
          'Ялта', 'Ялуторовск', 'Янаул', 'Яранск', 'Яровое', 'Ярославль', 'Ярцево', 'Ясногорск', 'Ясный', 'Яхрома']

dict_seat_assigment= {
    'Жилые': 150,
    'Производственные': 200,
    'Торговые': 400,
    'Складские': 75,
    'Объекты общепита': 200,
    'Коммунально-бытовые': 400,
    'Медицинские': 500,
    'Офисные': 300,
    'Спортивные': 200,
    'Образовательные': 500,
    'Банк': 400
}

dict_surface_color = {
    'Белый потолок, светлые стены, светлый пол' : 0.566666666666667,
    'Белый потолок, серые стены,темный пол' : 0.366666666666667,
    'Светлый потолок, светлые стены, серый пол' : 0.433333333333333,
    'Серый потолок, светлые стены, темный пол' : 0.3,
    'Серый потолок, серые стены, темный пол' : 0.233333333333333,
    'Темный потолок, серые стены, темный пол' :0.166666666666667
}

app = FastAPI()

templates = Jinja2Templates(directory="templates")

# Подключаем статические файлы
app.mount("/static", StaticFiles(directory="static"), name="static")

@app.get("/")
def root():
    return FileResponse("public/main_form.html")
@app.get('/new')
def vue():
    return FileResponse('public/new_form.html')


@app.post("/postdata")
def postdata(
        #   ОСНОВЫНЕ ПАРАМЕТРЫ
        city: str = Form(...),                                 # Город

        #   - Помещение
        permises_purpose: str = Form(...),                     # Назначение помещения
        permises_square: float = Form(..., gt=0),       # Площадь помещения
        permises_height: float = Form(..., gt=0),       # Высота потолка

        #   - Характеристики ограждающих конструкций
        wall_composition: str = Form(...),                     # Состав стен
        wall_thickness: float = Form(..., gt=0),        # Толщина слоя стены
        floor_composition: str = Form(...),                    # Состав перекрытия
        floor_thickness: float = Form(..., gt=0),       # Толщина слоя перекрытия
        glazing_area: float = Form(..., gt=0),          # Площадь остекления

        #   - Характеристика поверхностей помещения
        surface_color: str = Form(...),                        # Цвет поверхности

        #   - Параметры работы офиса
        office_number_of_employees: int = Form(..., gt=0),                # Количество сотрудников
        office_number_of_visitors: int = Form(..., gt=0),                 # Количество посетителей
        office_works_hours: float = Form(..., gt=0),                      # Продолжительность работы офиса часов в день
        office_works_days: int = Form(..., gt=0),                         # Продолжительность работы офиса дней

        #   ИНЖЕНЕРНЫЕ КОММУНИКАЦИИ

        #   Характеристика особенностей освещения
        light_type: str = Form(...),                                       # Тип освещения
        light_devices_count: int = Form(..., gt=0),                 # Количество источников освещения
        light_devices_power: float = Form(..., gt=0),               # Общая мощность источников освещения

        light_lightbox_presence = Form(...),                                # Наличие лайтбоксов
        light_lightbox_count: int = Form(0, gt=0),                 # Количество лайтбоксов

        outdoor_illuminated_sign=Form(...),                                   # Наличие наружной световой вывески
        outdoor_illuminated_photo_relay=Form(...),                            # Наличие фотореле

        self_service_devices = Form(...),                                      # Наличие устройств самообслуживания
        self_service_devices_count: int = Form(0, gt=0),              # Количество устройств самообслуживания

        electronic_queue_system = Form(...),                                  # Наличие системы электронной очереди
        electronic_queue_system_count: int = Form(0,gt=0),          # Количество систем электронной очереди

        exchange_rate_board = Form(...),                                      # Наличие табло курса валют
        exchange_rate_board_count: int = Form(...),              # Количествo табло курса валют

        #   Характеристика особенностей канализации
        sewerage_sign = Form(...),      # Наличие канализации
        sewerage_power = Form(...),     # Выделяемая мощность канализации
        sewerage_type = Form(...),      # Тип канализации
        client_toilet_sign = Form(...), # Наличие клиентского санузла

        #   Характеристика особенностей водоснабжения
        water_supply = Form(...),       # Наличие водоснабжения
        water_power = Form(...),        # Выделяемая мощность
        water_type = Form(...),         # Тип водоснабжения
        water_mixer_count: int = Form(...),  # Количество смесителей
        water_mixer_price: float = Form(..., gt = 0),
        price_cold_water: float = Form(..., gt = 0),   # Стоимость холодной воды
        price_hot_water: float = Form(..., gt = 0),    # Стоимость горячей воды

        #   Характеристика особенностей отопления
        heating_type = Form(...),               # Тип отопления
        heating_radiator_type = Form(...),      # Тип радиаторов
        heating_pipe_type = Form(...),          # Тип труб
        heating_floor_type = Form(...),         # Тип теплого пола
        heating_air_curtains = Form(...),       # Тепловые завесы

        # Туалет
        toilets_number: int = Form(0,gt=0),
        toilets_type_of_tank = Form(...),
        toilets_volume_of_a_single_mode_tank: float = Form(...),
        toilets_volume_of_a_dual_mode_tank: float = Form(...),


        number_of_flushes = 2 # Пока что статична

):
    ### РАССЧЕТ ОСВЕЩЕННОСТИ
    # 1. Расчитывает по введенным данным необходимую освещенность:
    ceiling_height_koefficient = 0  # коэфф высоты потолка
    if 2.7 > permises_height >= 2.5:
        ceiling_height_koefficient = 1
    elif 2.7 <= permises_height < 3:
        ceiling_height_koefficient = 1.2
    elif 3 <= permises_height < 3.5:
        ceiling_height_koefficient = 1.5
    elif 3.5 <= permises_height < 4.5:
        ceiling_height_koefficient = 2

    required_illumination_x = dict_seat_assigment[permises_purpose] * permises_square * ceiling_height_koefficient
    
    # 2. Проверяем соответствие действительной освещенности требуемой
    n_recommend_count = 0
    chkeck_light_per_normal_n = required_illumination_x  / light_devices_power

    #3. Сравниваем получившееся N с ячейкой С33
    message_recomend_str_n = ''
    n_recommend_count = 0

    if chkeck_light_per_normal_n > light_devices_count:
        message_recomend_str_n = "Количество осветительных приборов недостаточно, производим расчет и подбор. Рекомендация:"
        #4. Производим расчет и подбор если строка 13
        F = 3200 #принимаем для офиса 3200 Лм
        n_recommend_count = float(permises_square) * float(required_illumination_x ) * float(dict_surface_color[surface_color]) / float(F)
    elif chkeck_light_per_normal_n < light_devices_count:
        # 5. Производим оптимизацию если строка 14
        message_recomend_str_n = 'Осветительных приборов достаточно. Проверяем оптимальность типа освещения. Рекомендация:'
        if light_type == 1:
            n_recommend_count = light_devices_count  * light_devices_power / (2*36)
        elif light_type == 2:
            n_recommend_count = light_devices_count  * light_devices_power / (7*36)

    n_recommend_count = (str(int(n_recommend_count)) + ' светодиодных светильников мощностью 36 ватт размером 600x600x45')

    ### РАССЧЕТ ВОДОСНАБЖЕНИЯ

    # РАСЧЕТ ГОДОВОЙ ЭКОНОМИИ ВОДЫ ЗА СЧЕТ ЗАМЕНЫ ОБЫЧНЫХ СЛИВНЫХ БАЧКОВ НА ДВУХФАЗНЫЕ
    # 1. 1. Vобычн.=0,85*(Nперс*nперс+Nперс*nперс)*V1*T=      расчет объема воды прииспользовании обычных бачков, где n-количество смывов
    volume_single_mode = 0.85 * (office_number_of_employees * number_of_flushes) * toilets_volume_of_a_single_mode_tank * office_works_days
    # 2. Vдвухрежимн.=0,85*(Nперс*nперс+Nперс*nперс)*V2*T=      расчет объема воды прииспользовании двухрежимных бачков
    volume_dual_mode = 0.85 * (office_number_of_employees * number_of_flushes) * toilets_volume_of_a_dual_mode_tank * office_works_days
    # 3. Э=(Vобычн.-Vдвухрежимн.)*Ц=     расчет экономии денежных средств, где Ц-тариф на холодную воду
    water_economy = (volume_single_mode - volume_dual_mode) * price_cold_water

    ### Рассчет годового сокращения воды при замене обычных смесителей на автоматические сенсорные

    # 1.ΔVгор=keff*Vгор  -годовое сокращение потерь водысо смесителями
    k_eff = 0.2
    #Жилые_здания_с_централизованным_грячим_водоснабжением      27.37   49,275
    #Офисные_помещения                                          1.86    3,61
    #Детские_образовательные_учреждения                         6.205  8,395

    volume_losess_hot_delta = k_eff * 27.37

    # 2. ΔVхол=keff*Vхол -годовое сокращение потерь водысо смесителями
    volume_losess_cold_delta  = k_eff * 49.275

    # 3. Э=ΔVгор*Тгор+ΔVхол*Тхол -суммарная экономия в год с сенсонрыми смесителями
    summ_volume_economy_per_year = volume_losess_hot_delta * price_hot_water + volume_losess_cold_delta * price_cold_water

    # 4. З=Nсмес*S
    summ_price_water_mixers = water_mixer_count * water_mixer_price

    # 5. Окупаемость =З/Э (ячейки М19/М16)
    water_mixers_payback = summ_price_water_mixers / summ_volume_economy_per_year

    aaaa = 50

    if city.lower() in [c1ty.lower() for c1ty in list_city]:
        return templates.TemplateResponse("result.html", {'request':{
            'Статус': 200,
            'city': city,
            'permises_purpose': permises_purpose,
            'permises_square': permises_square,
            'permises_height': permises_height,
            'wall_composition':wall_composition,
            'wall_thickness':wall_thickness,
            'floor_composition':floor_composition,
            'floor_thickness':floor_thickness,
            'glazing_area':glazing_area,
            'surface_color':surface_color,
            'office_number_of_employees':office_number_of_employees,
            'office_number_of_visitors':office_number_of_visitors,
            'office_works_hours':office_works_hours,
            'light_type':light_type,
            'light_devices_count':light_devices_count,
            'light_devices_power':light_devices_power,
            'light_lightbox_presence':light_lightbox_presence,
            'light_lightbox_count':light_lightbox_count,
            'dict_seat_assigment':dict_seat_assigment[permises_purpose],
            'required_illumination_x':required_illumination_x ,
            'chkeck_light_per_normal_n': chkeck_light_per_normal_n,
            'outdoor_illuminated_sign':outdoor_illuminated_sign,
            'outdoor_illuminated_photo_relay':outdoor_illuminated_photo_relay,
            'self_service_devices' : self_service_devices,
            'toilets_number': toilets_number,
            'toilets_type_of_tank': toilets_type_of_tank,
            'toilets_volume_of_a_single_mode_tank': toilets_volume_of_a_single_mode_tank,
            'heating_type':heating_type,
            'heating_radiator_type':heating_radiator_type,
            'heating_pipe_type':heating_pipe_type,
            'heating_floor_type':heating_floor_type,
            'heating_air_curtains':heating_air_curtains,
            'water_supply':water_supply,
            'sewerage_power':sewerage_power,
            #'Тип водоснабжения': type_voda,
            'water_mixer_count':water_mixer_count,
            'sewerage_sign':sewerage_sign,
            'sewerage_type':sewerage_type,
            'client_toilet_sign':client_toilet_sign,


            ###  ОТЧЕТ
            # рассчет освещения
            'message_recomend_str_n' : message_recomend_str_n,
            'n_recommend_count' : n_recommend_count,
            # рассчет водоснабжения
            'water_economy': water_economy,
            'summ_volume_economy_per_year': summ_volume_economy_per_year,
            'water_mixers_payback': water_mixers_payback,

        }})
    else:
        return templates.TemplateResponse("exception.html", {'request':{'status': 422, 'exception' : 'Unprocessable Entity'}})

